{\rtf1\ansi\ansicpg1252\cocoartf2638
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 ArialMT;\f1\fmodern\fcharset0 CourierNewPSMT;\f2\fswiss\fcharset0 Arial-BoldMT;
}
{\colortbl;\red255\green255\blue255;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c100000\c100000\c100000;\cssrgb\c0\c0\c0;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sa100\partightenfactor0

\f0\fs26\fsmilli13333 \cf0 \cb2 \expnd0\expndtw0\kerning0
[1] A stack can be used to recognize certain types of patterns. Consider the pattern STRING1#STRING2, where neither string contains "#". The STRING2 must be the reverse of STRING1. Write a program that reads strings until the user enters an empty string. The program should indicate whether each string matches the pattern.\cb1 \
\cb2 Run:\cb1 \
\pard\pardeftab720\sa100\partightenfactor0

\f1 \cf0 \cb2 Input a string: 1&A#A&1
\f0 \cb1 \uc0\u8232 
\f1 \cb2 1&A#A&1 matches the pattern
\f0 \cb1 \uc0\u8232 \u8232 
\f1 \cb2 Input a string: 1&A#1&A
\f0 \cb1 \uc0\u8232 
\f1 \cb2 1&A#1&A does not match the pattern
\f0 \cb1 \uc0\u8232 \u8232 
\f1 \cb2 Input a string: 
\f0 madamimadam
\f1 #
\f0 madamimadam\cb1 \uc0\u8232 \cb2 madamimadam
\f1 #
\f0 madamimadam
\f1  matches the pattern
\f0 \cb1 \uc0\u8232 \u8232 
\f1 \cb2 Input a string:
\f0 \cb1 \uc0\u8232 \u8232 \cb2 [2] Write a program that prompts the user to enter a non-negative decimal number and a base in the range 2 <= base <= 16. Write a function multibaseOutput
\f1 ()
\f0  that displays the number in the specified base. The program terminates when the user enters a number of 0 and a base 0.\cb1 \uc0\u8232 \u8232 
\f1 \cb2 Run:
\f0 \cb1 \uc0\u8232 
\f1 \cb2 Enter a non-negative decimal number and base (2 <= B <= 16) or 0 0 to terminate: 155 16
\f0 \cb1 \uc0\u8232 
\f1 \cb2 \'a0\'a0\'a0 155 base 16 is 9B
\f0 \cb1 \uc0\u8232 
\f1 \cb2 Enter a non-negative decimal number and base (2 <= B <= 16) or 0 0 to terminate: 3553 8
\f0 \cb1 \uc0\u8232 
\f1 \cb2 \'a0\'a0\'a0 3553 base 8 is 6741
\f0 \cb1 \uc0\u8232 
\f1 \cb2 Enter a non-negative decimal number and base (2 <= B <= 16) or 0 0 to terminate: 0 0
\f0 \cb1 \uc0\u8232 \u8232 \cb2 [3] The program prompts for a filename and then reads the file to check for balanced curly braces, \{\}; parentheses, (); and square brackets, []. The program should ignore any character that is not a parenthesis, curly brace, or square bracket. Note that the proper nesting is required.\cb1 \uc0\u8232 \u8232 
\f1 \cb2 Assume File "balance1.
\f0 txt
\f1 " has
\f0 \cb1 \uc0\u8232 
\f1 \cb2 ((a+b))[\{\{c\}\}]()\{([])\} * c[i]
\f0 \cb1 \uc0\u8232 
\f1 \cb2 (welcome to C++)
\f0 \cb1 \uc0\u8232 
\f1 \cb2 \{while (i = 5) ;\}
\f0 \cb1 \uc0\u8232 
\f1 \cb2 [z]
\f0 \cb1 \uc0\u8232 
\f1 \cb2 Run 1:
\f0 \cb1 \uc0\u8232 
\f1 \cb2 Enter the file name: balance1.
\f0 txt\cb1 \uc0\u8232 
\f1 \cb2 The symbols in balance1.tx
\f0 t
\f1  are balanced.
\f0 \cb1 \uc0\u8232 \u8232 
\f1 \cb2 Assume File "balance2.
\f0 txt
\f1 " has [a(b]c)
\f0 \cb1 \uc0\u8232 
\f1 \cb2 Run 2:
\f0 \cb1 \uc0\u8232 
\f1 \cb2 Enter the file name: balance2.tx
\f0 t\cb1 \uc0\u8232 
\f1 \cb2 The symbols in balance2.tx
\f0 t
\f1  are not balanced.
\f0 \cb1 \
\
\pard\pardeftab720\sa100\partightenfactor0

\f2\b \cf0 \cb2 Please upload the following:
\f0\b0 \cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa120\partightenfactor0
\ls1\ilvl0\cf0 \cb2 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
The class .cpp file\cb1 \
\ls1\ilvl0\cb2 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
The main program\cb1 \
\ls1\ilvl0\cb2 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
The class .h file\cb1 \
\ls1\ilvl0\cb2 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Output File}